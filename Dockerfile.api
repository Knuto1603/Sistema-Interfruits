# ===================================
# Dockerfile para Backend API (Symfony)
# Contiene: apps/core + apps/security
# ===================================

FROM php:8.2-fpm-alpine

# Variables de entorno
ENV APP_ENV=prod
ENV SYMFONY_PHPUNIT_VERSION=9.5

# Instalar dependencias del sistema
RUN apk add --no-cache \
    git \
    unzip \
    zip \
    curl \
    libzip-dev \
    mysql-client \
    nginx \
    supervisor \
    && docker-php-ext-install \
    pdo \
    pdo_mysql \
    zip

# Instalar Composer
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# Crear usuario para Symfony
RUN addgroup -g 1000 symfony && adduser -u 1000 -G symfony -s /bin/sh -D symfony

# Configurar directorio de trabajo
WORKDIR /app

# Copiar archivos de dependencias primero (para cache de Docker)
COPY composer.json composer.lock symfony.lock ./
COPY apps/core/composer.json apps/core/composer.lock ./apps/core/
COPY apps/security/composer.json apps/security/composer.lock ./apps/security/

# Instalar dependencias PHP
RUN composer install --no-dev --optimize-autoloader --no-scripts

# Copiar código fuente
COPY . .

# Crear directorios necesarios y dar permisos
RUN mkdir -p var/cache var/log \
    && mkdir -p apps/core/var/cache apps/core/var/log \
    && mkdir -p apps/security/var/cache apps/security/var/log \
    && chown -R symfony:symfony var apps/core/var apps/security/var

# Configurar Nginx para servir ambas apps
COPY docker/nginx.api.conf /etc/nginx/nginx.conf

# Configurar Supervisor para manejar PHP-FPM + Nginx
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Script de entrada
COPY docker/entrypoint.api.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# El puerto que Railway asignará automáticamente
EXPOSE 8080

USER symfony

# Ejecutar supervisor (maneja PHP-FPM + Nginx)
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
